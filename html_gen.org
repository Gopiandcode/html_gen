* HtmlGen
A simple little static templating engine for HTML.
Coded using literate programming.


* Preamble
While the overall nature of this project is quite simple - just a
bit of file loading and exports, we can leverage rust's ecosystem
to make our development a little easier.


The crates we'll be using are as follows:
- *ArgParse* - This is a crate that I used a while back when making
another command line application. It provides a very nice rustic
interface over a library which produces command line interfaces
compliant with most unix/linux standards.

#+begin_src rust :tangle src/main.rs 
extern crate argparse;
#+end_src


* Command Line Interface
Clearly this project is going to be a command line application, as the static generator will need to parse through a document
and construct the components.

Using argparse - as imported in the preamble, we'll design a sweet
and sexy interface to access our application.
The main actions we'll allow a user to perform using this application
will be as follows:
- *specify output* - by default the output of the compiled files
are placed in ./bin/ dir, which is made if it does not exist.
- *specify template folder* - within a non-templated file, when
 a template reference is used, by default the application searches the 
 ./template/ dir to resolve these references.


#+begin_src rust :tangle src/main.rs 
fn main() {
    println!("Hello world!");
}
#+end_src

